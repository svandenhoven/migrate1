---
include:
  - local: .gitlab/ci/*.gitlab-ci.yml

default:
  image: golang:${GO_VERSION}-${DEBIAN_VERSION}
  tags:
    - gitlab-org

stages:
  - lint
  - security
  - test
  - prebuild
  - build
  - deploy

variables:
  # Versions specified here are production versions
  # See also .tool-versions file for development versions
  # See also GO_VERSION declared in .go-matrix-job
  COREPACK_VERSION: "0.28.1"
  GO_VERSION: "1.22"
  GO_VERSION_PREVIOUS: "1.21"
  GOLANGCI_LINT_VERSION: "1.58.1"
  HUGO_VERSION: "0.126.3"
  # Lychee Docker image tags use SHAs
  LYCHEE_VERSION: "0a54079"
  NODE_VERSION: "20"
  SHELLCHECK_VERSION: "0.10.0"
  YQ_VERSION: "4.44.1"

  # Linux distribution versions
  ALPINE_VERSION: "3.19"
  DEBIAN_VERSION: "bookworm"

  # Other versions
  ASDF_VERSION: "0.14.0"

workflow:
  name: '$DOCS_PROJECT_PIPELINE_TYPE'
  rules:
    # Prevent branch pipelines if an MR is open on the branch.
    - if: $CI_COMMIT_BRANCH && $CI_PIPELINE_SOURCE == "push" && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_REF_NAME =~ /gps/'
      variables:
        DOCS_PROJECT_PIPELINE_TYPE: "MR pipeline (Google): branch $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
        SEARCH_BACKEND: 'google'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      variables:
        DOCS_PROJECT_PIPELINE_TYPE: "MR pipeline: branch $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
        SEARCH_BACKEND: 'lunr'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $PIPELINE_SCHEDULE_TYPE == "delete_environments"'
      variables:
        DOCS_PROJECT_PIPELINE_TYPE: "Monthly stopped environments cleanup pipeline"
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $PIPELINE_SCHEDULE_TYPE == "chores"'
      variables:
        DOCS_PROJECT_PIPELINE_TYPE: "Cleanup chores pipeline"
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $PIPELINE_SCHEDULE_TYPE == "docker"'
      variables:
        DOCS_PROJECT_PIPELINE_TYPE: "Build docker images pipeline"
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $PIPELINE_SCHEDULE_TYPE == "hourly_deploy"'
      variables:
        DOCS_PROJECT_PIPELINE_TYPE: "Hourly site deployment pipeline"
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      variables:
        DOCS_PROJECT_PIPELINE_TYPE: "Upstream review app pipeline"
        SEARCH_BACKEND: 'lunr'
    # Allow branch pipelines for the default branch and stable branches named XX.X
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      variables:
        DOCS_PROJECT_PIPELINE_TYPE: "Default branch pipeline"
    - if: '$CI_COMMIT_BRANCH =~ /^\d{1,2}\.\d{1,2}$/'
      variables:
        DOCS_PROJECT_PIPELINE_TYPE: "Stable branch pipeline"
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^\d{1,2}\.\d{1,2}$/'
      variables:
        DOCS_PROJECT_PIPELINE_TYPE: "Stable branch pipeline (backport)"

.go-matrix-job:
  parallel:
    matrix:
      # Should match GO_VERSION_PREVIOUS and GO_VERSION variables declared above
      - GO_VERSION: ["1.21", "1.22"]

.yarn_install:
  before_script:
    - node --version
    # https://github.com/nodejs/corepack?tab=readme-ov-file#manual-installs
    - npm uninstall -g yarn pnpm
    - npm install -g corepack@${COREPACK_VERSION}
    - corepack enable
    - yarn --version
    - yarn install --immutable

.frontend:
  image: node:${NODE_VERSION}-alpine${ALPINE_VERSION}
  extends:
    - .yarn_install
